import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id "com.github.hierynomus.license" version "0.14.0"
  id "com.xebialabs.xldp" version "1.0.5"
  id 'nebula.release' version '6.0.0'
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'

if (!project.hasProperty('release.scope')) {
  project.ext['release.scope'] = 'patch'
}

if (!project.hasProperty('release.useLastTag')) {
  project.ext['release.useLastTag'] = true
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://dist.xebialabs.com/public/maven2'
  }
}


test {
    // Auto detected Unit tests only, exclude the end to end integration test
    exclude '**/*IntegrationTest.class'
    
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}
 

task integrationTest(type: Test, dependsOn: ['build']) {
    // do not automatically scan for tests
    scanForTestClasses = false 
    // explicitly include the integration test
    include '**/*IntegrationTest.class'
    // To run tests - 
    // 1. Docker  and Docker Compose must be installed 
    // 2. The XL-Release image expects to find a valid XL-Release license here: ~/xl-licenses/xl-release-license.lic
    // 3. To run the test - ./gradlew clean integrationTest
    //   The test will set up a temporary xlr/mockserver testbed using docker. The mockserver
    //   will serve up the property or yaml files
    // After testing is complete, the test docker containers are stopped and removed. 

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

dependencies {
  testCompile group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
  // Place rest-assured before JUnit dependency to make sure correct Hamcrest is used
  testCompile 'io.rest-assured:rest-assured:3.2.0'
  testCompile "junit:junit:4.11"
  testCompile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
  testCompile 'org.assertj:assertj-core:3.6.2'
  //testCompile "org.testcontainers:testcontainers:1.11.3"
  testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.15.2'

  testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta2'
  testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
  

  compile 'com.google.guava:guava:23.0'

  compile group: 'org.yaml', name: 'snakeyaml', version: '1.24'
  compile group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
  compile group: 'org.glassfish', name: 'javax.json', version: '1.1.4'

}


license {
  header rootProject.file('License.md')
  strictCheck false
  excludes(["**/*.png",  "**/*.txt", "**/*.json", "**/*.pyc", "**/*.yml", "**/*.yaml", "**/*.properties", "**/*.xml"])
  ext.year = Calendar.getInstance().get(Calendar.YEAR)
  ext.name = 'XEBIALABS'
}
